swagger: '2.0'
info:
  version: '1.0.0'
  title: "Mitropia API"
  description: |
    Mitropia API specification
    

produces:
  - application/hal+json      # Representation message format
  - application/problem+json  # Error message format

schemes:
  - https

securityDefinitions:
  oauth2:
    type: oauth2
    authorizationUrl: 'http://example/oauth'
    description: |
      security for Mitropia API TBD
    flow: implicit
    scopes:
      'write:products': modify products
      'write:wishlist': read and modify your wishlist
      'read:reviews': read all reviews
      'write:reviews': write reviews
      'read:reviews:stats': read review statistics
      'read:users': read users
      'write:users': modify users
      'read:wishlist' : read your wishlist

paths:    
  /games:
    x-summary: Games

    get:
      summary: Retrieve Games List
      description: Retrieve list of all the active Mitropia game instances

      responses:
        200:
          description: List of active games
          schema:
            $ref: '#/definitions/halGames'
    post:
      summary: Start new game
      description: Create a new game instance
      parameters:
        - name: gameSpecs
          in: body
          description: JSON body with initial game specifications
          schema: 
            $ref: '#/definitions/gameSpecs'
      responses:      
        201:
          description: Game created
          schema:
            $ref: '#/definitions/halGameObject'

  /games/{game_id}:
    x-summary: Specific game
    get:
      summary: Retrieve Games List
      description: Retrieve list of all the active Mitropia game instances
      parameters:
        - name: game_id
          in: path
          description: game unique identifier
          required: true
          type: string

      responses:
        200:
          description: Game details
          schema:
            $ref: '#/definitions/halGameObject'
    delete:
      summary: Delete a game
      description: Delete an active game
      parameters:
        - name: game_id
          in: path
          description: game unique identifier
          required: true
          type: string
      responses:
        204:
          description: Game deleted

  /games/{game_id}/moves:
    x-summary: Moves
    get: 
      summary: List all the moves in a specific game
      description: Unordered list of all the moves performed in a specific game by each player
      parameters:
        - name: game_id
          in: path
          description: game unique identifier
          required: true
          type: string
        - name: player
          in: query
          description: Filter moves only by a specific player
          required: false
          type: string
      responses:
        200:
          description: List of moves
          schema:
            $ref: '#/definitions/halMoves'
    post:
      summary: Play move
      description: Play a new move. Validation is performed and the response depends upon it.
      parameters:
        - name: game_id
          in: path
          description: game unique identifier
          required: true
          type: string
        - name: moveDetails
          in: body
          description: New move coordinates
          required: true
          schema:
            $ref: '#/definitions/newMove'
      responses:      
        201:
          description: Move played
          schema:
            $ref: '#/definitions/halGameObject'

definitions:
  coordinates:
    type: object
    properties:
      q:
        type: number
        format: integer
      r:
        type: number
        format: integer
  halGameObject:
    allOf:
      - $ref: '#/definitions/halResource'
      - type: object
        properties: 
          gameId: 
            type: string
          playerCount:
            type: number
            format: integer
          boardStatus:
            type: object
            properties:
              boardSize:
                type: number
                format: integer
              player1:
                type: array
                items:
                  $ref: '#/definitions/coordinates'
              player2:
                type: array
                items:
                  $ref: '#/definitions/coordinates'
              mountains:
                type: array
                items:
                  $ref: '#/definitions/coordinates'
              tunnels:
                type: array
                items:
                  $ref: '#/definitions/coordinates'
              castles:
                type: array
                items:
                  $ref: '#/definitions/coordinates'
  halMoves:
    allOf:
      - $ref: '#/definitions/halResource'
      - type: object
        properties:
          gameId:
            type: string
          player1:
            type: array
            items:
              $ref: '#/definitions/coordinates'
          player2:
            type: array
            items:
              $ref: '#/definitions/coordinates'

  newMove:
    type: object
    properties: 
      playerId:
        type: string
      coordinates:
        $ref: '#/definitions/coordinates'

  gameSpecs:
    type: object
    properties: 
      boardSize:
        type: number
        format: integer
      playerCount:
        type: number
        format: integer
      mountains:
        type: array
        items:
          $ref: '#/definitions/coordinates'
      tunnels:
        type: array
        items:
          $ref: '#/definitions/coordinates'
      castles:
        type: array
        items:
          $ref: '#/definitions/coordinates'

  halGames:
    allOf:
      - $ref: '#/definitions/halResource'
      - type: object
        properties:
          games:
            type: array
            items:
              type: string
  #
  # -- DO NOT EDIT BEYOND THIS POINT --
  #

  # Media Types Definitions

  #
  # application/problem+json
  #
  problemDetail:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        type: number
        format: integer
      detail:
        type: string
      instance:
        type: string
    required:
      - title
      - detail

  #
  # application/hal+json defintion
  #
  halLinkObject:
    type: object
    required:
      - href
    properties:
      href:
        type: string
      templated:
        type: boolean
      type:
        type: string
      deprecation:
        type: string
      name:
        type: string
      profile:
        type: string
      title:
        type: string
      hreflang:
        type: string

  halCuriesLink:
    title: HAL Curies Link
    allOf:
      - type: object
        properties:
          templated:
            enum:
              - true
        required:
          - templated
      - $ref: '#/definitions/halLinkObject'

  halResource:
    title: HAL Resource Object
    type: object
    properties:
      _links:
        type: object
        additionalProperties:
          # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
          allOf:
            - $ref: '#/definitions/halLinkObject'
            - type: array
              items:
                - $ref: '#/definitions/halLinkObject'
        properties:
          curies:
            # WARN: Should be "anyOf" but "anyOf" isn't supported in Swagger 2.0
            allOf:
              - $ref: '#/definitions/halCuriesLink'
              - type: array
                items:
                  - $ref: '#/definitions/halCuriesLink'
      _embedded:
        type: object
        additionalProperties: true
        # WARN: Apiary doesn't support circular references
        # additionalProperties:
        #   anyOf:
        #     - $ref: '#/definitions/hal_resource'
        #     - type: array
        #       items:
        #         - $ref: '#/definitions/hal_resource'